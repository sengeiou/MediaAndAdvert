<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoma.dao.SysAccountPayeeMapper">
  <resultMap id="BaseResultMap" type="com.xiaoma.bean.po.SysAccountPayee">
    <id column="payee_id" jdbcType="VARCHAR" property="payeeId" />
    <result column="type_name" jdbcType="VARCHAR" property="typeName" />
    <result column="payee" jdbcType="VARCHAR" property="payee" />
    <result column="alipay_account" jdbcType="VARCHAR" property="alipayAccount" />
    <result column="opening_bank" jdbcType="VARCHAR" property="openingBank" />
    <result column="bank_account" jdbcType="VARCHAR" property="bankAccount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    payee_id, type_name, payee, alipay_account, opening_bank, bank_account, create_time
  </sql>
  <select id="selectByExample" parameterType="com.xiaoma.bean.bo.SysAccountPayeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_account_payee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_account_payee
    where payee_id = #{payeeId}
  </select>

  <insert id="insert" parameterType="com.xiaoma.bean.po.SysAccountPayee">
    insert into sys_account_payee (payee_id, type_name, payee, 
      alipay_account, opening_bank, bank_account, 
      create_time)
    values (#{payeeId}, #{typeName}, #{payee}, 
      #{alipayAccount}, #{openingBank}, #{bankAccount}, 
      #{createTime})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaoma.bean.po.SysAccountPayee">
    insert into sys_account_payee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="payeeId != null">
        payee_id,
      </if>
      <if test="typeName != null">
        type_name,
      </if>
      <if test="payee != null">
        payee,
      </if>
      <if test="alipayAccount != null">
        alipay_account,
      </if>
      <if test="openingBank != null">
        opening_bank,
      </if>
      <if test="bankAccount != null">
        bank_account,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="payeeId != null">
        #{payeeId},
      </if>
      <if test="typeName != null">
        #{typeName},
      </if>
      <if test="payee != null">
        #{payee},
      </if>
      <if test="alipayAccount != null">
        #{alipayAccount},
      </if>
      <if test="openingBank != null">
        #{openingBank},
      </if>
      <if test="bankAccount != null">
        #{bankAccount},
      </if>
      <if test="createTime != null">
        #{createTime},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiaoma.bean.bo.SysAccountPayeeExample" resultType="java.lang.Integer">
    select count(*) from sys_account_payee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_account_payee
    <set>
      <if test="record.payeeId != null">
        payee_id = #{record.payeeId},
      </if>
      <if test="record.typeName != null">
        type_name = #{record.typeName},
      </if>
      <if test="record.payee != null">
        payee = #{record.payee},
      </if>
      <if test="record.alipayAccount != null">
        alipay_account = #{record.alipayAccount},
      </if>
      <if test="record.openingBank != null">
        opening_bank = #{record.openingBank},
      </if>
      <if test="record.bankAccount != null">
        bank_account = #{record.bankAccount},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_account_payee
    set payee_id = #{record.payeeId},
      type_name = #{record.typeName},
      payee = #{record.payee},
      alipay_account = #{record.alipayAccount},
      opening_bank = #{record.openingBank},
      bank_account = #{record.bankAccount},
      create_time = #{record.createTime}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaoma.bean.po.SysAccountPayee">
    update sys_account_payee
    <set>
      <if test="typeName != null">
        type_name = #{typeName},
      </if>
      <if test="payee != null">
        payee = #{payee},
      </if>
      <if test="alipayAccount != null">
        alipay_account = #{alipayAccount},
      </if>
      <if test="openingBank != null">
        opening_bank = #{openingBank},
      </if>
      <if test="bankAccount != null">
        bank_account = #{bankAccount},
      </if>
      <if test="createTime != null">
        create_time = #{createTime},
      </if>
    </set>
    where payee_id = #{payeeId}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaoma.bean.po.SysAccountPayee">
    update sys_account_payee
    set type_name = #{typeName},
      payee = #{payee},
      alipay_account = #{alipayAccount},
      opening_bank = #{openingBank},
      bank_account = #{bankAccount},
      create_time = #{createTime}
    where payee_id = #{payeeId}
  </update>
</mapper>